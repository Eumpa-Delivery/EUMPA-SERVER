# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir -p deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      - name: Copy Start Script
        run: cp scripts/deploy.sh ./deploy/

      # Transfer jar file to deploy dir
      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu/deploy"

      - name: Transfer Deploy Script use SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          source: "./scripts/*.sh"
          target: "/home/ubuntu/deploy"

      - name: Transfer static use SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          source: "./src/resources/static/*"
          target: "/home/ubuntu/deploy"

      - name: Execute Server Init Script
        uses: appleboy/ssh-action@v1.0.1
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          script_stop: true
          script: chmod +x /home/ubuntu/deploy/scripts/deploy.sh && sh /home/ubuntu/deploy/scripts/deploy.sh
