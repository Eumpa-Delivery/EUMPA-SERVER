# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v3

      # 환경변수 파일 생성
      - name: Generate Environment Variable File
        run: |
          mkdir ./src/main/resources
          touch ./src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties       

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      # Transfer jar file to deploy dir
      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SERVER_HOST }}
          password: ${{ secrets.PASSWORD }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu/deploy"
          strip_components: 2

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Transfer Deploy Script use SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SERVER_HOST }}
          password: ${{ secrets.PASSWORD }}
          source: "scripts/deploy.sh"
          target: "/home/ubuntu/deploy"

      - name: Execute Server Init Script
        uses: appleboy/ssh-action@v1.0.1
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SERVER_HOST }}
          password: ${{ secrets.PASSWORD }}
          script_stop: true
          script: chmod +x /home/ubuntu/deploy/deploy.sh && sh /home/ubuntu/deploy/deploy.sh
